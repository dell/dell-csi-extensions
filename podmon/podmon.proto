syntax = "proto3";
package podmon.v1;

option go_package = ".;podmon";

// Proprietary Extensions to CSI drivers, formatted and handled similar to CSI requests.
service Podmon {
    // ValidateVolumeHostconnectivity validates host connectivity for one or more volumes, by
    // either or both of two methds:
    // 1. Verifying the link status of the host, returned in the connected.
    // 2. Verifying if any I/O activity has been observerd in the recent past, returned in ios_in_progress.
    rpc ValidateVolumeHostConnectivity(ValidateVolumeHostConnectivityRequest)
       returns (ValidateVolumeHostConnectivityResponse) {}
}


message ValidateVolumeHostConnectivityRequest {
  // The IDs of the volumes that are used on the specified node.
  // This field is REQUIRED.
  repeated string volume_ids = 1;

  // The ID of the node. This field is REQUIRED. The CO SHALL set this
  // field to match the node ID returned by `NodeGetInfo`.
  string node_id = 2;

  // The array ID used to query connectivity to the node.
  // All the volume_ids if specified should blong to this array id.
  string array_id = 4;

  // The length of time in seconds to sample for I/O activity
  int32 io_sample_time_seconds = 3;
}

message ValidateVolumeHostConnectivityResponse {
  // The host is currently connected.
  bool connected = 1;

  // I/Os have been overserved recently.
  bool ios_in_progress = 2;

  // General status messages.
  repeated string messages = 3;
}
