// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v6.31.1
// source: podmon.proto

package podmon

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ValidateVolumeHostConnectivityRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The IDs of the volumes that are used on the specified node.
	// This field is REQUIRED.
	VolumeIds []string `protobuf:"bytes,1,rep,name=volume_ids,json=volumeIds,proto3" json:"volume_ids,omitempty"`
	// The ID of the node. This field is REQUIRED. The CO SHALL set this
	// field to match the node ID returned by `NodeGetInfo`.
	NodeId string `protobuf:"bytes,2,opt,name=node_id,json=nodeId,proto3" json:"node_id,omitempty"`
	// The array ID used to query connectivity to the node.
	// All the volume_ids if specified should blong to this array id.
	ArrayId string `protobuf:"bytes,4,opt,name=array_id,json=arrayId,proto3" json:"array_id,omitempty"`
	// The length of time in seconds to sample for I/O activity
	IoSampleTimeSeconds int32 `protobuf:"varint,3,opt,name=io_sample_time_seconds,json=ioSampleTimeSeconds,proto3" json:"io_sample_time_seconds,omitempty"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *ValidateVolumeHostConnectivityRequest) Reset() {
	*x = ValidateVolumeHostConnectivityRequest{}
	mi := &file_podmon_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ValidateVolumeHostConnectivityRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ValidateVolumeHostConnectivityRequest) ProtoMessage() {}

func (x *ValidateVolumeHostConnectivityRequest) ProtoReflect() protoreflect.Message {
	mi := &file_podmon_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ValidateVolumeHostConnectivityRequest.ProtoReflect.Descriptor instead.
func (*ValidateVolumeHostConnectivityRequest) Descriptor() ([]byte, []int) {
	return file_podmon_proto_rawDescGZIP(), []int{0}
}

func (x *ValidateVolumeHostConnectivityRequest) GetVolumeIds() []string {
	if x != nil {
		return x.VolumeIds
	}
	return nil
}

func (x *ValidateVolumeHostConnectivityRequest) GetNodeId() string {
	if x != nil {
		return x.NodeId
	}
	return ""
}

func (x *ValidateVolumeHostConnectivityRequest) GetArrayId() string {
	if x != nil {
		return x.ArrayId
	}
	return ""
}

func (x *ValidateVolumeHostConnectivityRequest) GetIoSampleTimeSeconds() int32 {
	if x != nil {
		return x.IoSampleTimeSeconds
	}
	return 0
}

type ValidateVolumeHostConnectivityResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The host is currently connected.
	Connected bool `protobuf:"varint,1,opt,name=connected,proto3" json:"connected,omitempty"`
	// I/Os have been overserved recently.
	IosInProgress bool `protobuf:"varint,2,opt,name=ios_in_progress,json=iosInProgress,proto3" json:"ios_in_progress,omitempty"`
	// General status messages.
	Messages      []string `protobuf:"bytes,3,rep,name=messages,proto3" json:"messages,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ValidateVolumeHostConnectivityResponse) Reset() {
	*x = ValidateVolumeHostConnectivityResponse{}
	mi := &file_podmon_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ValidateVolumeHostConnectivityResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ValidateVolumeHostConnectivityResponse) ProtoMessage() {}

func (x *ValidateVolumeHostConnectivityResponse) ProtoReflect() protoreflect.Message {
	mi := &file_podmon_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ValidateVolumeHostConnectivityResponse.ProtoReflect.Descriptor instead.
func (*ValidateVolumeHostConnectivityResponse) Descriptor() ([]byte, []int) {
	return file_podmon_proto_rawDescGZIP(), []int{1}
}

func (x *ValidateVolumeHostConnectivityResponse) GetConnected() bool {
	if x != nil {
		return x.Connected
	}
	return false
}

func (x *ValidateVolumeHostConnectivityResponse) GetIosInProgress() bool {
	if x != nil {
		return x.IosInProgress
	}
	return false
}

func (x *ValidateVolumeHostConnectivityResponse) GetMessages() []string {
	if x != nil {
		return x.Messages
	}
	return nil
}

var File_podmon_proto protoreflect.FileDescriptor

const file_podmon_proto_rawDesc = "" +
	"\n" +
	"\fpodmon.proto\x12\tpodmon.v1\"\xaf\x01\n" +
	"%ValidateVolumeHostConnectivityRequest\x12\x1d\n" +
	"\n" +
	"volume_ids\x18\x01 \x03(\tR\tvolumeIds\x12\x17\n" +
	"\anode_id\x18\x02 \x01(\tR\x06nodeId\x12\x19\n" +
	"\barray_id\x18\x04 \x01(\tR\aarrayId\x123\n" +
	"\x16io_sample_time_seconds\x18\x03 \x01(\x05R\x13ioSampleTimeSeconds\"\x8a\x01\n" +
	"&ValidateVolumeHostConnectivityResponse\x12\x1c\n" +
	"\tconnected\x18\x01 \x01(\bR\tconnected\x12&\n" +
	"\x0fios_in_progress\x18\x02 \x01(\bR\riosInProgress\x12\x1a\n" +
	"\bmessages\x18\x03 \x03(\tR\bmessages2\x92\x01\n" +
	"\x06Podmon\x12\x87\x01\n" +
	"\x1eValidateVolumeHostConnectivity\x120.podmon.v1.ValidateVolumeHostConnectivityRequest\x1a1.podmon.v1.ValidateVolumeHostConnectivityResponse\"\x00B\vZ\t./;podmonb\x06proto3"

var (
	file_podmon_proto_rawDescOnce sync.Once
	file_podmon_proto_rawDescData []byte
)

func file_podmon_proto_rawDescGZIP() []byte {
	file_podmon_proto_rawDescOnce.Do(func() {
		file_podmon_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_podmon_proto_rawDesc), len(file_podmon_proto_rawDesc)))
	})
	return file_podmon_proto_rawDescData
}

var file_podmon_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_podmon_proto_goTypes = []any{
	(*ValidateVolumeHostConnectivityRequest)(nil),  // 0: podmon.v1.ValidateVolumeHostConnectivityRequest
	(*ValidateVolumeHostConnectivityResponse)(nil), // 1: podmon.v1.ValidateVolumeHostConnectivityResponse
}
var file_podmon_proto_depIdxs = []int32{
	0, // 0: podmon.v1.Podmon.ValidateVolumeHostConnectivity:input_type -> podmon.v1.ValidateVolumeHostConnectivityRequest
	1, // 1: podmon.v1.Podmon.ValidateVolumeHostConnectivity:output_type -> podmon.v1.ValidateVolumeHostConnectivityResponse
	1, // [1:2] is the sub-list for method output_type
	0, // [0:1] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_podmon_proto_init() }
func file_podmon_proto_init() {
	if File_podmon_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_podmon_proto_rawDesc), len(file_podmon_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_podmon_proto_goTypes,
		DependencyIndexes: file_podmon_proto_depIdxs,
		MessageInfos:      file_podmon_proto_msgTypes,
	}.Build()
	File_podmon_proto = out.File
	file_podmon_proto_goTypes = nil
	file_podmon_proto_depIdxs = nil
}
