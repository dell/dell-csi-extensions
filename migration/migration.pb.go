// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.20.0
// source: migration.proto

package migration

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type MigrateTypes int32

const (
	MigrateTypes_UNKNOWN_MIGRATE  MigrateTypes = 0
	MigrateTypes_NON_REPL_TO_REPL MigrateTypes = 1
	MigrateTypes_REPL_TO_NON_REPL MigrateTypes = 2
	MigrateTypes_VERSION_UPGRADE  MigrateTypes = 3
)

// Enum value maps for MigrateTypes.
var (
	MigrateTypes_name = map[int32]string{
		0: "UNKNOWN_MIGRATE",
		1: "NON_REPL_TO_REPL",
		2: "REPL_TO_NON_REPL",
		3: "VERSION_UPGRADE",
	}
	MigrateTypes_value = map[string]int32{
		"UNKNOWN_MIGRATE":  0,
		"NON_REPL_TO_REPL": 1,
		"REPL_TO_NON_REPL": 2,
		"VERSION_UPGRADE":  3,
	}
)

func (x MigrateTypes) Enum() *MigrateTypes {
	p := new(MigrateTypes)
	*p = x
	return p
}

func (x MigrateTypes) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MigrateTypes) Descriptor() protoreflect.EnumDescriptor {
	return file_migration_proto_enumTypes[0].Descriptor()
}

func (MigrateTypes) Type() protoreflect.EnumType {
	return &file_migration_proto_enumTypes[0]
}

func (x MigrateTypes) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use MigrateTypes.Descriptor instead.
func (MigrateTypes) EnumDescriptor() ([]byte, []int) {
	return file_migration_proto_rawDescGZIP(), []int{0}
}

// Input request used in GetMigrationCapabilities API
type GetMigrationCapabilityRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetMigrationCapabilityRequest) Reset() {
	*x = GetMigrationCapabilityRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_migration_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMigrationCapabilityRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMigrationCapabilityRequest) ProtoMessage() {}

func (x *GetMigrationCapabilityRequest) ProtoReflect() protoreflect.Message {
	mi := &file_migration_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMigrationCapabilityRequest.ProtoReflect.Descriptor instead.
func (*GetMigrationCapabilityRequest) Descriptor() ([]byte, []int) {
	return file_migration_proto_rawDescGZIP(), []int{0}
}

type MigrationCapability struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Type:
	//	*MigrationCapability_Rpc
	Type isMigrationCapability_Type `protobuf_oneof:"type"`
}

func (x *MigrationCapability) Reset() {
	*x = MigrationCapability{}
	if protoimpl.UnsafeEnabled {
		mi := &file_migration_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MigrationCapability) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MigrationCapability) ProtoMessage() {}

func (x *MigrationCapability) ProtoReflect() protoreflect.Message {
	mi := &file_migration_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MigrationCapability.ProtoReflect.Descriptor instead.
func (*MigrationCapability) Descriptor() ([]byte, []int) {
	return file_migration_proto_rawDescGZIP(), []int{1}
}

func (m *MigrationCapability) GetType() isMigrationCapability_Type {
	if m != nil {
		return m.Type
	}
	return nil
}

func (x *MigrationCapability) GetRpc() *MigrationCapability_RPC {
	if x, ok := x.GetType().(*MigrationCapability_Rpc); ok {
		return x.Rpc
	}
	return nil
}

type isMigrationCapability_Type interface {
	isMigrationCapability_Type()
}

type MigrationCapability_Rpc struct {
	Rpc *MigrationCapability_RPC `protobuf:"bytes,1,opt,name=rpc,proto3,oneof"`
}

func (*MigrationCapability_Rpc) isMigrationCapability_Type() {}

// Capabilities of the driver, in terms of the
// RPC calls it supports
type GetMigrationCapabilityResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Capabilities []*MigrationCapability `protobuf:"bytes,1,rep,name=capabilities,proto3" json:"capabilities,omitempty"`
}

func (x *GetMigrationCapabilityResponse) Reset() {
	*x = GetMigrationCapabilityResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_migration_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMigrationCapabilityResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMigrationCapabilityResponse) ProtoMessage() {}

func (x *GetMigrationCapabilityResponse) ProtoReflect() protoreflect.Message {
	mi := &file_migration_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMigrationCapabilityResponse.ProtoReflect.Descriptor instead.
func (*GetMigrationCapabilityResponse) Descriptor() ([]byte, []int) {
	return file_migration_proto_rawDescGZIP(), []int{2}
}

func (x *GetMigrationCapabilityResponse) GetCapabilities() []*MigrationCapability {
	if x != nil {
		return x.Capabilities
	}
	return nil
}

// Information about a specific volume
type Volume struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Size of the volume in bytes
	CapacityBytes int64 `protobuf:"varint,1,opt,name=capacity_bytes,json=capacityBytes,proto3" json:"capacity_bytes,omitempty"`
	// Volume ID - should be the same as one
	// returned in the CSI CreateVolumeResponse
	VolumeId string `protobuf:"bytes,2,opt,name=volume_id,json=volumeId,proto3" json:"volume_id,omitempty"`
	// Optional context information about the volume
	// which can be passed down to the driver in future calls
	FsType        string            `protobuf:"bytes,3,opt,name=fs_type,json=fsType,proto3" json:"fs_type,omitempty"`
	ReadOnly      bool              `protobuf:"varint,4,opt,name=read_only,json=readOnly,proto3" json:"read_only,omitempty"`
	MountOptions  []string          `protobuf:"bytes,5,rep,name=mount_options,json=mountOptions,proto3" json:"mount_options,omitempty"`
	VolumeContext map[string]string `protobuf:"bytes,6,rep,name=volume_context,json=volumeContext,proto3" json:"volume_context,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *Volume) Reset() {
	*x = Volume{}
	if protoimpl.UnsafeEnabled {
		mi := &file_migration_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Volume) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Volume) ProtoMessage() {}

func (x *Volume) ProtoReflect() protoreflect.Message {
	mi := &file_migration_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Volume.ProtoReflect.Descriptor instead.
func (*Volume) Descriptor() ([]byte, []int) {
	return file_migration_proto_rawDescGZIP(), []int{3}
}

func (x *Volume) GetCapacityBytes() int64 {
	if x != nil {
		return x.CapacityBytes
	}
	return 0
}

func (x *Volume) GetVolumeId() string {
	if x != nil {
		return x.VolumeId
	}
	return ""
}

func (x *Volume) GetFsType() string {
	if x != nil {
		return x.FsType
	}
	return ""
}

func (x *Volume) GetReadOnly() bool {
	if x != nil {
		return x.ReadOnly
	}
	return false
}

func (x *Volume) GetMountOptions() []string {
	if x != nil {
		return x.MountOptions
	}
	return nil
}

func (x *Volume) GetVolumeContext() map[string]string {
	if x != nil {
		return x.VolumeContext
	}
	return nil
}

type VolumeMigrateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	VolumeHandle string `protobuf:"bytes,1,opt,name=volume_handle,json=volumeHandle,proto3" json:"volume_handle,omitempty"`
	StorageClass string `protobuf:"bytes,2,opt,name=storage_class,json=storageClass,proto3" json:"storage_class,omitempty"`
	// Types that are assignable to MigrateTypes:
	//	*VolumeMigrateRequest_Type
	MigrateTypes isVolumeMigrateRequest_MigrateTypes `protobuf_oneof:"migrate_types"`
	ScParameters map[string]string                   `protobuf:"bytes,4,rep,name=sc_parameters,json=scParameters,proto3" json:"sc_parameters,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	ShouldClone  bool                                `protobuf:"varint,5,opt,name=should_clone,json=shouldClone,proto3" json:"should_clone,omitempty"`
}

func (x *VolumeMigrateRequest) Reset() {
	*x = VolumeMigrateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_migration_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VolumeMigrateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VolumeMigrateRequest) ProtoMessage() {}

func (x *VolumeMigrateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_migration_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VolumeMigrateRequest.ProtoReflect.Descriptor instead.
func (*VolumeMigrateRequest) Descriptor() ([]byte, []int) {
	return file_migration_proto_rawDescGZIP(), []int{4}
}

func (x *VolumeMigrateRequest) GetVolumeHandle() string {
	if x != nil {
		return x.VolumeHandle
	}
	return ""
}

func (x *VolumeMigrateRequest) GetStorageClass() string {
	if x != nil {
		return x.StorageClass
	}
	return ""
}

func (m *VolumeMigrateRequest) GetMigrateTypes() isVolumeMigrateRequest_MigrateTypes {
	if m != nil {
		return m.MigrateTypes
	}
	return nil
}

func (x *VolumeMigrateRequest) GetType() MigrateTypes {
	if x, ok := x.GetMigrateTypes().(*VolumeMigrateRequest_Type); ok {
		return x.Type
	}
	return MigrateTypes_UNKNOWN_MIGRATE
}

func (x *VolumeMigrateRequest) GetScParameters() map[string]string {
	if x != nil {
		return x.ScParameters
	}
	return nil
}

func (x *VolumeMigrateRequest) GetShouldClone() bool {
	if x != nil {
		return x.ShouldClone
	}
	return false
}

type isVolumeMigrateRequest_MigrateTypes interface {
	isVolumeMigrateRequest_MigrateTypes()
}

type VolumeMigrateRequest_Type struct {
	Type MigrateTypes `protobuf:"varint,3,opt,name=type,proto3,enum=migration.v1alpha1.MigrateTypes,oneof"`
}

func (*VolumeMigrateRequest_Type) isVolumeMigrateRequest_MigrateTypes() {}

type VolumeMigrateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MigratedVolume *Volume `protobuf:"bytes,1,opt,name=migrated_volume,json=migratedVolume,proto3" json:"migrated_volume,omitempty"`
}

func (x *VolumeMigrateResponse) Reset() {
	*x = VolumeMigrateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_migration_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VolumeMigrateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VolumeMigrateResponse) ProtoMessage() {}

func (x *VolumeMigrateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_migration_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VolumeMigrateResponse.ProtoReflect.Descriptor instead.
func (*VolumeMigrateResponse) Descriptor() ([]byte, []int) {
	return file_migration_proto_rawDescGZIP(), []int{5}
}

func (x *VolumeMigrateResponse) GetMigratedVolume() *Volume {
	if x != nil {
		return x.MigratedVolume
	}
	return nil
}

type MigrationCapability_RPC struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type MigrateTypes `protobuf:"varint,1,opt,name=type,proto3,enum=migration.v1alpha1.MigrateTypes" json:"type,omitempty"`
}

func (x *MigrationCapability_RPC) Reset() {
	*x = MigrationCapability_RPC{}
	if protoimpl.UnsafeEnabled {
		mi := &file_migration_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MigrationCapability_RPC) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MigrationCapability_RPC) ProtoMessage() {}

func (x *MigrationCapability_RPC) ProtoReflect() protoreflect.Message {
	mi := &file_migration_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MigrationCapability_RPC.ProtoReflect.Descriptor instead.
func (*MigrationCapability_RPC) Descriptor() ([]byte, []int) {
	return file_migration_proto_rawDescGZIP(), []int{1, 0}
}

func (x *MigrationCapability_RPC) GetType() MigrateTypes {
	if x != nil {
		return x.Type
	}
	return MigrateTypes_UNKNOWN_MIGRATE
}

var File_migration_proto protoreflect.FileDescriptor

var file_migration_proto_rawDesc = []byte{
	0x0a, 0x0f, 0x6d, 0x69, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x12, 0x6d, 0x69, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x61,
	0x6c, 0x70, 0x68, 0x61, 0x31, 0x22, 0x1f, 0x0a, 0x1d, 0x47, 0x65, 0x74, 0x4d, 0x69, 0x67, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x61, 0x70, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x9b, 0x01, 0x0a, 0x13, 0x4d, 0x69, 0x67, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x43, 0x61, 0x70, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x12, 0x3f,
	0x0a, 0x03, 0x72, 0x70, 0x63, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x6d, 0x69,
	0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31,
	0x2e, 0x4d, 0x69, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x61, 0x70, 0x61, 0x62, 0x69,
	0x6c, 0x69, 0x74, 0x79, 0x2e, 0x52, 0x50, 0x43, 0x48, 0x00, 0x52, 0x03, 0x72, 0x70, 0x63, 0x1a,
	0x3b, 0x0a, 0x03, 0x52, 0x50, 0x43, 0x12, 0x34, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x20, 0x2e, 0x6d, 0x69, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x4d, 0x69, 0x67, 0x72, 0x61, 0x74,
	0x65, 0x54, 0x79, 0x70, 0x65, 0x73, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x42, 0x06, 0x0a, 0x04,
	0x74, 0x79, 0x70, 0x65, 0x22, 0x6d, 0x0a, 0x1e, 0x47, 0x65, 0x74, 0x4d, 0x69, 0x67, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x43, 0x61, 0x70, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4b, 0x0a, 0x0c, 0x63, 0x61, 0x70, 0x61, 0x62, 0x69,
	0x6c, 0x69, 0x74, 0x69, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x6d,
	0x69, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61,
	0x31, 0x2e, 0x4d, 0x69, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x61, 0x70, 0x61, 0x62,
	0x69, 0x6c, 0x69, 0x74, 0x79, 0x52, 0x0c, 0x63, 0x61, 0x70, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74,
	0x69, 0x65, 0x73, 0x22, 0xbf, 0x02, 0x0a, 0x06, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x12, 0x25,
	0x0a, 0x0e, 0x63, 0x61, 0x70, 0x61, 0x63, 0x69, 0x74, 0x79, 0x5f, 0x62, 0x79, 0x74, 0x65, 0x73,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x63, 0x61, 0x70, 0x61, 0x63, 0x69, 0x74, 0x79,
	0x42, 0x79, 0x74, 0x65, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x5f,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65,
	0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x66, 0x73, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x66, 0x73, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x72,
	0x65, 0x61, 0x64, 0x5f, 0x6f, 0x6e, 0x6c, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08,
	0x72, 0x65, 0x61, 0x64, 0x4f, 0x6e, 0x6c, 0x79, 0x12, 0x23, 0x0a, 0x0d, 0x6d, 0x6f, 0x75, 0x6e,
	0x74, 0x5f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x0c, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x54, 0x0a,
	0x0e, 0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x18,
	0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x6d, 0x69, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x56, 0x6f, 0x6c, 0x75, 0x6d,
	0x65, 0x2e, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x52, 0x0d, 0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x43, 0x6f, 0x6e, 0x74,
	0x65, 0x78, 0x74, 0x1a, 0x40, 0x0a, 0x12, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x43, 0x6f, 0x6e,
	0x74, 0x65, 0x78, 0x74, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0xee, 0x02, 0x0a, 0x14, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65,
	0x4d, 0x69, 0x67, 0x72, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x23,
	0x0a, 0x0d, 0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x5f, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x48, 0x61, 0x6e,
	0x64, 0x6c, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x5f, 0x63,
	0x6c, 0x61, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x73, 0x74, 0x6f, 0x72,
	0x61, 0x67, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x12, 0x36, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x20, 0x2e, 0x6d, 0x69, 0x67, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x4d, 0x69, 0x67, 0x72,
	0x61, 0x74, 0x65, 0x54, 0x79, 0x70, 0x65, 0x73, 0x48, 0x00, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x12, 0x5f, 0x0a, 0x0d, 0x73, 0x63, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72,
	0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x3a, 0x2e, 0x6d, 0x69, 0x67, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x56, 0x6f, 0x6c,
	0x75, 0x6d, 0x65, 0x4d, 0x69, 0x67, 0x72, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x2e, 0x53, 0x63, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x52, 0x0c, 0x73, 0x63, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72,
	0x73, 0x12, 0x21, 0x0a, 0x0c, 0x73, 0x68, 0x6f, 0x75, 0x6c, 0x64, 0x5f, 0x63, 0x6c, 0x6f, 0x6e,
	0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x73, 0x68, 0x6f, 0x75, 0x6c, 0x64, 0x43,
	0x6c, 0x6f, 0x6e, 0x65, 0x1a, 0x3f, 0x0a, 0x11, 0x53, 0x63, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65,
	0x74, 0x65, 0x72, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x3a, 0x02, 0x38, 0x01, 0x42, 0x0f, 0x0a, 0x0d, 0x6d, 0x69, 0x67, 0x72, 0x61, 0x74, 0x65,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x22, 0x5c, 0x0a, 0x15, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65,
	0x4d, 0x69, 0x67, 0x72, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x43, 0x0a, 0x0f, 0x6d, 0x69, 0x67, 0x72, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x76, 0x6f, 0x6c, 0x75,
	0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x6d, 0x69, 0x67, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x56, 0x6f,
	0x6c, 0x75, 0x6d, 0x65, 0x52, 0x0e, 0x6d, 0x69, 0x67, 0x72, 0x61, 0x74, 0x65, 0x64, 0x56, 0x6f,
	0x6c, 0x75, 0x6d, 0x65, 0x2a, 0x64, 0x0a, 0x0c, 0x4d, 0x69, 0x67, 0x72, 0x61, 0x74, 0x65, 0x54,
	0x79, 0x70, 0x65, 0x73, 0x12, 0x13, 0x0a, 0x0f, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x5f,
	0x4d, 0x49, 0x47, 0x52, 0x41, 0x54, 0x45, 0x10, 0x00, 0x12, 0x14, 0x0a, 0x10, 0x4e, 0x4f, 0x4e,
	0x5f, 0x52, 0x45, 0x50, 0x4c, 0x5f, 0x54, 0x4f, 0x5f, 0x52, 0x45, 0x50, 0x4c, 0x10, 0x01, 0x12,
	0x14, 0x0a, 0x10, 0x52, 0x45, 0x50, 0x4c, 0x5f, 0x54, 0x4f, 0x5f, 0x4e, 0x4f, 0x4e, 0x5f, 0x52,
	0x45, 0x50, 0x4c, 0x10, 0x02, 0x12, 0x13, 0x0a, 0x0f, 0x56, 0x45, 0x52, 0x53, 0x49, 0x4f, 0x4e,
	0x5f, 0x55, 0x50, 0x47, 0x52, 0x41, 0x44, 0x45, 0x10, 0x03, 0x32, 0xf9, 0x01, 0x0a, 0x09, 0x4d,
	0x69, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x66, 0x0a, 0x0d, 0x56, 0x6f, 0x6c, 0x75,
	0x6d, 0x65, 0x4d, 0x69, 0x67, 0x72, 0x61, 0x74, 0x65, 0x12, 0x28, 0x2e, 0x6d, 0x69, 0x67, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x56,
	0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x4d, 0x69, 0x67, 0x72, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x29, 0x2e, 0x6d, 0x69, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e,
	0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x4d,
	0x69, 0x67, 0x72, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x12, 0x83, 0x01, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x4d, 0x69, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x43, 0x61, 0x70, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x69, 0x65, 0x73, 0x12, 0x31, 0x2e,
	0x6d, 0x69, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68,
	0x61, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x69, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43,
	0x61, 0x70, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x32, 0x2e, 0x6d, 0x69, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x61,
	0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x69, 0x67, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x43, 0x61, 0x70, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x0e, 0x5a, 0x0c, 0x2e, 0x2f, 0x3b, 0x6d, 0x69, 0x67,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_migration_proto_rawDescOnce sync.Once
	file_migration_proto_rawDescData = file_migration_proto_rawDesc
)

func file_migration_proto_rawDescGZIP() []byte {
	file_migration_proto_rawDescOnce.Do(func() {
		file_migration_proto_rawDescData = protoimpl.X.CompressGZIP(file_migration_proto_rawDescData)
	})
	return file_migration_proto_rawDescData
}

var file_migration_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_migration_proto_msgTypes = make([]protoimpl.MessageInfo, 9)
var file_migration_proto_goTypes = []interface{}{
	(MigrateTypes)(0),                      // 0: migration.v1alpha1.MigrateTypes
	(*GetMigrationCapabilityRequest)(nil),  // 1: migration.v1alpha1.GetMigrationCapabilityRequest
	(*MigrationCapability)(nil),            // 2: migration.v1alpha1.MigrationCapability
	(*GetMigrationCapabilityResponse)(nil), // 3: migration.v1alpha1.GetMigrationCapabilityResponse
	(*Volume)(nil),                         // 4: migration.v1alpha1.Volume
	(*VolumeMigrateRequest)(nil),           // 5: migration.v1alpha1.VolumeMigrateRequest
	(*VolumeMigrateResponse)(nil),          // 6: migration.v1alpha1.VolumeMigrateResponse
	(*MigrationCapability_RPC)(nil),        // 7: migration.v1alpha1.MigrationCapability.RPC
	nil,                                    // 8: migration.v1alpha1.Volume.VolumeContextEntry
	nil,                                    // 9: migration.v1alpha1.VolumeMigrateRequest.ScParametersEntry
}
var file_migration_proto_depIdxs = []int32{
	7, // 0: migration.v1alpha1.MigrationCapability.rpc:type_name -> migration.v1alpha1.MigrationCapability.RPC
	2, // 1: migration.v1alpha1.GetMigrationCapabilityResponse.capabilities:type_name -> migration.v1alpha1.MigrationCapability
	8, // 2: migration.v1alpha1.Volume.volume_context:type_name -> migration.v1alpha1.Volume.VolumeContextEntry
	0, // 3: migration.v1alpha1.VolumeMigrateRequest.type:type_name -> migration.v1alpha1.MigrateTypes
	9, // 4: migration.v1alpha1.VolumeMigrateRequest.sc_parameters:type_name -> migration.v1alpha1.VolumeMigrateRequest.ScParametersEntry
	4, // 5: migration.v1alpha1.VolumeMigrateResponse.migrated_volume:type_name -> migration.v1alpha1.Volume
	0, // 6: migration.v1alpha1.MigrationCapability.RPC.type:type_name -> migration.v1alpha1.MigrateTypes
	5, // 7: migration.v1alpha1.Migration.VolumeMigrate:input_type -> migration.v1alpha1.VolumeMigrateRequest
	1, // 8: migration.v1alpha1.Migration.GetMigrationCapabilities:input_type -> migration.v1alpha1.GetMigrationCapabilityRequest
	6, // 9: migration.v1alpha1.Migration.VolumeMigrate:output_type -> migration.v1alpha1.VolumeMigrateResponse
	3, // 10: migration.v1alpha1.Migration.GetMigrationCapabilities:output_type -> migration.v1alpha1.GetMigrationCapabilityResponse
	9, // [9:11] is the sub-list for method output_type
	7, // [7:9] is the sub-list for method input_type
	7, // [7:7] is the sub-list for extension type_name
	7, // [7:7] is the sub-list for extension extendee
	0, // [0:7] is the sub-list for field type_name
}

func init() { file_migration_proto_init() }
func file_migration_proto_init() {
	if File_migration_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_migration_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMigrationCapabilityRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_migration_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MigrationCapability); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_migration_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMigrationCapabilityResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_migration_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Volume); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_migration_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VolumeMigrateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_migration_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VolumeMigrateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_migration_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MigrationCapability_RPC); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_migration_proto_msgTypes[1].OneofWrappers = []interface{}{
		(*MigrationCapability_Rpc)(nil),
	}
	file_migration_proto_msgTypes[4].OneofWrappers = []interface{}{
		(*VolumeMigrateRequest_Type)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_migration_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   9,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_migration_proto_goTypes,
		DependencyIndexes: file_migration_proto_depIdxs,
		EnumInfos:         file_migration_proto_enumTypes,
		MessageInfos:      file_migration_proto_msgTypes,
	}.Build()
	File_migration_proto = out.File
	file_migration_proto_rawDesc = nil
	file_migration_proto_goTypes = nil
	file_migration_proto_depIdxs = nil
}
