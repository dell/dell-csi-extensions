// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v6.31.1
// source: replication.proto

package replication

import (
	common "github.com/dell/dell-csi-extensions/common"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// ActionTypes are the exhaustive set of actions which can be performed on
// the protection group
type ActionTypes int32

const (
	// Site-Aware actions
	ActionTypes_UNKNOWN_ACTION ActionTypes = 0
	// Failover - Write disable source device, suspend replication and make the target device ReadWrite
	// Swap personalities of source and target device
	// Failover to the local protection group (storage array)
	ActionTypes_FAILOVER_LOCAL ActionTypes = 1
	// Failover to the remote protection group (storage array)
	ActionTypes_FAILOVER_REMOTE ActionTypes = 2
	// Unplanned Failover
	// Same as Failover but used in case of disaster
	// Unplanned failover to the local storage array
	ActionTypes_UNPLANNED_FAILOVER_LOCAL ActionTypes = 3
	// Unplanned failover to the remote storage array
	ActionTypes_UNPLANNED_FAILOVER_REMOTE ActionTypes = 4
	// Reprotect
	// Restart the replication in reverse direction
	// Resume replication from local -> remote storage array
	ActionTypes_REPROTECT_LOCAL ActionTypes = 5
	// Resume replication from remote -> local storage array
	ActionTypes_REPROTECT_REMOTE ActionTypes = 6
	// Same as Failover but don't swap source & target devices
	ActionTypes_FAILOVER_WITHOUT_SWAP_LOCAL  ActionTypes = 7
	ActionTypes_FAILOVER_WITHOUT_SWAP_REMOTE ActionTypes = 8
	// Failback to the source device while keeping all writes done at target device
	ActionTypes_FAILBACK_LOCAL  ActionTypes = 9
	ActionTypes_FAILBACK_REMOTE ActionTypes = 10
	// Same as Failback but keep data from source (discard any writes at target)
	ActionTypes_ACTION_FAILBACK_DISCARD_CHANGES_LOCAL  ActionTypes = 11
	ActionTypes_ACTION_FAILBACK_DISCARD_CHANGES_REMOTE ActionTypes = 12
	// Swap personalities of source and target devices
	ActionTypes_SWAP_LOCAL  ActionTypes = 13
	ActionTypes_SWAP_REMOTE ActionTypes = 14
	// Suspend the replication link
	ActionTypes_SUSPEND ActionTypes = 15
	// Resume the replication link
	ActionTypes_RESUME ActionTypes = 16
	// Copy pending tracks from source to target
	ActionTypes_ESTABLISH ActionTypes = 17
	// Same as ESTABLISH
	ActionTypes_SYNC               ActionTypes = 18
	ActionTypes_TEST_FAILOVER      ActionTypes = 19
	ActionTypes_TEST_FAILOVER_STOP ActionTypes = 20
	ActionTypes_CREATE_SNAPSHOT    ActionTypes = 21
	ActionTypes_ABORT_SNAPSHOT     ActionTypes = 22
)

// Enum value maps for ActionTypes.
var (
	ActionTypes_name = map[int32]string{
		0:  "UNKNOWN_ACTION",
		1:  "FAILOVER_LOCAL",
		2:  "FAILOVER_REMOTE",
		3:  "UNPLANNED_FAILOVER_LOCAL",
		4:  "UNPLANNED_FAILOVER_REMOTE",
		5:  "REPROTECT_LOCAL",
		6:  "REPROTECT_REMOTE",
		7:  "FAILOVER_WITHOUT_SWAP_LOCAL",
		8:  "FAILOVER_WITHOUT_SWAP_REMOTE",
		9:  "FAILBACK_LOCAL",
		10: "FAILBACK_REMOTE",
		11: "ACTION_FAILBACK_DISCARD_CHANGES_LOCAL",
		12: "ACTION_FAILBACK_DISCARD_CHANGES_REMOTE",
		13: "SWAP_LOCAL",
		14: "SWAP_REMOTE",
		15: "SUSPEND",
		16: "RESUME",
		17: "ESTABLISH",
		18: "SYNC",
		19: "TEST_FAILOVER",
		20: "TEST_FAILOVER_STOP",
		21: "CREATE_SNAPSHOT",
		22: "ABORT_SNAPSHOT",
	}
	ActionTypes_value = map[string]int32{
		"UNKNOWN_ACTION":                         0,
		"FAILOVER_LOCAL":                         1,
		"FAILOVER_REMOTE":                        2,
		"UNPLANNED_FAILOVER_LOCAL":               3,
		"UNPLANNED_FAILOVER_REMOTE":              4,
		"REPROTECT_LOCAL":                        5,
		"REPROTECT_REMOTE":                       6,
		"FAILOVER_WITHOUT_SWAP_LOCAL":            7,
		"FAILOVER_WITHOUT_SWAP_REMOTE":           8,
		"FAILBACK_LOCAL":                         9,
		"FAILBACK_REMOTE":                        10,
		"ACTION_FAILBACK_DISCARD_CHANGES_LOCAL":  11,
		"ACTION_FAILBACK_DISCARD_CHANGES_REMOTE": 12,
		"SWAP_LOCAL":                             13,
		"SWAP_REMOTE":                            14,
		"SUSPEND":                                15,
		"RESUME":                                 16,
		"ESTABLISH":                              17,
		"SYNC":                                   18,
		"TEST_FAILOVER":                          19,
		"TEST_FAILOVER_STOP":                     20,
		"CREATE_SNAPSHOT":                        21,
		"ABORT_SNAPSHOT":                         22,
	}
)

func (x ActionTypes) Enum() *ActionTypes {
	p := new(ActionTypes)
	*p = x
	return p
}

func (x ActionTypes) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ActionTypes) Descriptor() protoreflect.EnumDescriptor {
	return file_replication_proto_enumTypes[0].Descriptor()
}

func (ActionTypes) Type() protoreflect.EnumType {
	return &file_replication_proto_enumTypes[0]
}

func (x ActionTypes) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ActionTypes.Descriptor instead.
func (ActionTypes) EnumDescriptor() ([]byte, []int) {
	return file_replication_proto_rawDescGZIP(), []int{0}
}

type ReplicationCapability_RPC_Type int32

const (
	ReplicationCapability_RPC_CREATE_REMOTE_VOLUME         ReplicationCapability_RPC_Type = 0
	ReplicationCapability_RPC_CREATE_PROTECTION_GROUP      ReplicationCapability_RPC_Type = 1
	ReplicationCapability_RPC_DELETE_PROTECTION_GROUP      ReplicationCapability_RPC_Type = 2
	ReplicationCapability_RPC_MONITOR_PROTECTION_GROUP     ReplicationCapability_RPC_Type = 3
	ReplicationCapability_RPC_REPLICATION_ACTION_EXECUTION ReplicationCapability_RPC_Type = 4
)

// Enum value maps for ReplicationCapability_RPC_Type.
var (
	ReplicationCapability_RPC_Type_name = map[int32]string{
		0: "CREATE_REMOTE_VOLUME",
		1: "CREATE_PROTECTION_GROUP",
		2: "DELETE_PROTECTION_GROUP",
		3: "MONITOR_PROTECTION_GROUP",
		4: "REPLICATION_ACTION_EXECUTION",
	}
	ReplicationCapability_RPC_Type_value = map[string]int32{
		"CREATE_REMOTE_VOLUME":         0,
		"CREATE_PROTECTION_GROUP":      1,
		"DELETE_PROTECTION_GROUP":      2,
		"MONITOR_PROTECTION_GROUP":     3,
		"REPLICATION_ACTION_EXECUTION": 4,
	}
)

func (x ReplicationCapability_RPC_Type) Enum() *ReplicationCapability_RPC_Type {
	p := new(ReplicationCapability_RPC_Type)
	*p = x
	return p
}

func (x ReplicationCapability_RPC_Type) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ReplicationCapability_RPC_Type) Descriptor() protoreflect.EnumDescriptor {
	return file_replication_proto_enumTypes[1].Descriptor()
}

func (ReplicationCapability_RPC_Type) Type() protoreflect.EnumType {
	return &file_replication_proto_enumTypes[1]
}

func (x ReplicationCapability_RPC_Type) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ReplicationCapability_RPC_Type.Descriptor instead.
func (ReplicationCapability_RPC_Type) EnumDescriptor() ([]byte, []int) {
	return file_replication_proto_rawDescGZIP(), []int{2, 0, 0}
}

type StorageProtectionGroupStatus_State int32

const (
	StorageProtectionGroupStatus_SYNCHRONIZED     StorageProtectionGroupStatus_State = 0
	StorageProtectionGroupStatus_SYNC_IN_PROGRESS StorageProtectionGroupStatus_State = 1
	StorageProtectionGroupStatus_SUSPENDED        StorageProtectionGroupStatus_State = 2
	StorageProtectionGroupStatus_FAILEDOVER       StorageProtectionGroupStatus_State = 3
	StorageProtectionGroupStatus_INVALID          StorageProtectionGroupStatus_State = 4
	StorageProtectionGroupStatus_UNKNOWN          StorageProtectionGroupStatus_State = 5
	StorageProtectionGroupStatus_EMPTY            StorageProtectionGroupStatus_State = 6
)

// Enum value maps for StorageProtectionGroupStatus_State.
var (
	StorageProtectionGroupStatus_State_name = map[int32]string{
		0: "SYNCHRONIZED",
		1: "SYNC_IN_PROGRESS",
		2: "SUSPENDED",
		3: "FAILEDOVER",
		4: "INVALID",
		5: "UNKNOWN",
		6: "EMPTY",
	}
	StorageProtectionGroupStatus_State_value = map[string]int32{
		"SYNCHRONIZED":     0,
		"SYNC_IN_PROGRESS": 1,
		"SUSPENDED":        2,
		"FAILEDOVER":       3,
		"INVALID":          4,
		"UNKNOWN":          5,
		"EMPTY":            6,
	}
)

func (x StorageProtectionGroupStatus_State) Enum() *StorageProtectionGroupStatus_State {
	p := new(StorageProtectionGroupStatus_State)
	*p = x
	return p
}

func (x StorageProtectionGroupStatus_State) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (StorageProtectionGroupStatus_State) Descriptor() protoreflect.EnumDescriptor {
	return file_replication_proto_enumTypes[2].Descriptor()
}

func (StorageProtectionGroupStatus_State) Type() protoreflect.EnumType {
	return &file_replication_proto_enumTypes[2]
}

func (x StorageProtectionGroupStatus_State) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use StorageProtectionGroupStatus_State.Descriptor instead.
func (StorageProtectionGroupStatus_State) EnumDescriptor() ([]byte, []int) {
	return file_replication_proto_rawDescGZIP(), []int{17, 0}
}

// Input request used in GetReplicationCapabilities API
type GetReplicationCapabilityRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetReplicationCapabilityRequest) Reset() {
	*x = GetReplicationCapabilityRequest{}
	mi := &file_replication_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetReplicationCapabilityRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetReplicationCapabilityRequest) ProtoMessage() {}

func (x *GetReplicationCapabilityRequest) ProtoReflect() protoreflect.Message {
	mi := &file_replication_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetReplicationCapabilityRequest.ProtoReflect.Descriptor instead.
func (*GetReplicationCapabilityRequest) Descriptor() ([]byte, []int) {
	return file_replication_proto_rawDescGZIP(), []int{0}
}

// Capabilities of the driver, in terms of the
// RPC calls it supports
type GetReplicationCapabilityResponse struct {
	state         protoimpl.MessageState   `protogen:"open.v1"`
	Capabilities  []*ReplicationCapability `protobuf:"bytes,1,rep,name=capabilities,proto3" json:"capabilities,omitempty"`
	Actions       []*SupportedActions      `protobuf:"bytes,2,rep,name=actions,proto3" json:"actions,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetReplicationCapabilityResponse) Reset() {
	*x = GetReplicationCapabilityResponse{}
	mi := &file_replication_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetReplicationCapabilityResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetReplicationCapabilityResponse) ProtoMessage() {}

func (x *GetReplicationCapabilityResponse) ProtoReflect() protoreflect.Message {
	mi := &file_replication_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetReplicationCapabilityResponse.ProtoReflect.Descriptor instead.
func (*GetReplicationCapabilityResponse) Descriptor() ([]byte, []int) {
	return file_replication_proto_rawDescGZIP(), []int{1}
}

func (x *GetReplicationCapabilityResponse) GetCapabilities() []*ReplicationCapability {
	if x != nil {
		return x.Capabilities
	}
	return nil
}

func (x *GetReplicationCapabilityResponse) GetActions() []*SupportedActions {
	if x != nil {
		return x.Actions
	}
	return nil
}

// ReplicationCapability is the set of replication capabilities
// which can be advertised by a CSI driver.
// For e.g. if a driver supports discovery of remote volume characteristics
// via the extensions API, then it needs to include DISCOVER_REMOTE_VOLUME
// in its list of replication capabilities
type ReplicationCapability struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Type:
	//
	//	*ReplicationCapability_Rpc
	Type          isReplicationCapability_Type `protobuf_oneof:"type"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ReplicationCapability) Reset() {
	*x = ReplicationCapability{}
	mi := &file_replication_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReplicationCapability) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReplicationCapability) ProtoMessage() {}

func (x *ReplicationCapability) ProtoReflect() protoreflect.Message {
	mi := &file_replication_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReplicationCapability.ProtoReflect.Descriptor instead.
func (*ReplicationCapability) Descriptor() ([]byte, []int) {
	return file_replication_proto_rawDescGZIP(), []int{2}
}

func (x *ReplicationCapability) GetType() isReplicationCapability_Type {
	if x != nil {
		return x.Type
	}
	return nil
}

func (x *ReplicationCapability) GetRpc() *ReplicationCapability_RPC {
	if x != nil {
		if x, ok := x.Type.(*ReplicationCapability_Rpc); ok {
			return x.Rpc
		}
	}
	return nil
}

type isReplicationCapability_Type interface {
	isReplicationCapability_Type()
}

type ReplicationCapability_Rpc struct {
	Rpc *ReplicationCapability_RPC `protobuf:"bytes,1,opt,name=rpc,proto3,oneof"`
}

func (*ReplicationCapability_Rpc) isReplicationCapability_Type() {}

// SupportedActions is the set of action types
// which are supported by a specific CSI driver
type SupportedActions struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Actions:
	//
	//	*SupportedActions_Type
	Actions       isSupportedActions_Actions `protobuf_oneof:"Actions"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SupportedActions) Reset() {
	*x = SupportedActions{}
	mi := &file_replication_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SupportedActions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SupportedActions) ProtoMessage() {}

func (x *SupportedActions) ProtoReflect() protoreflect.Message {
	mi := &file_replication_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SupportedActions.ProtoReflect.Descriptor instead.
func (*SupportedActions) Descriptor() ([]byte, []int) {
	return file_replication_proto_rawDescGZIP(), []int{3}
}

func (x *SupportedActions) GetActions() isSupportedActions_Actions {
	if x != nil {
		return x.Actions
	}
	return nil
}

func (x *SupportedActions) GetType() ActionTypes {
	if x != nil {
		if x, ok := x.Actions.(*SupportedActions_Type); ok {
			return x.Type
		}
	}
	return ActionTypes_UNKNOWN_ACTION
}

type isSupportedActions_Actions interface {
	isSupportedActions_Actions()
}

type SupportedActions_Type struct {
	Type ActionTypes `protobuf:"varint,1,opt,name=type,proto3,enum=replication.v1.ActionTypes,oneof"`
}

func (*SupportedActions_Type) isSupportedActions_Actions() {}

type CreateRemoteVolumeRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Handle of the local volume, whose remote replica is being requested
	VolumeHandle string `protobuf:"bytes,1,opt,name=volume_handle,json=volumeHandle,proto3" json:"volume_handle,omitempty"`
	// Optional information about the local volume
	// will be supplied if the driver returned this information
	// in the CSI CreateVolumeResponse
	Parameters    map[string]string `protobuf:"bytes,2,rep,name=parameters,proto3" json:"parameters,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateRemoteVolumeRequest) Reset() {
	*x = CreateRemoteVolumeRequest{}
	mi := &file_replication_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateRemoteVolumeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateRemoteVolumeRequest) ProtoMessage() {}

func (x *CreateRemoteVolumeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_replication_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateRemoteVolumeRequest.ProtoReflect.Descriptor instead.
func (*CreateRemoteVolumeRequest) Descriptor() ([]byte, []int) {
	return file_replication_proto_rawDescGZIP(), []int{4}
}

func (x *CreateRemoteVolumeRequest) GetVolumeHandle() string {
	if x != nil {
		return x.VolumeHandle
	}
	return ""
}

func (x *CreateRemoteVolumeRequest) GetParameters() map[string]string {
	if x != nil {
		return x.Parameters
	}
	return nil
}

type DeleteLocalVolumeRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Handle of the local volume, whose deletion is being requested
	VolumeHandle string `protobuf:"bytes,1,opt,name=volume_handle,json=volumeHandle,proto3" json:"volume_handle,omitempty"`
	// Attributes of the volume (optional)
	VolumeAttributes map[string]string `protobuf:"bytes,2,rep,name=volume_attributes,json=volumeAttributes,proto3" json:"volume_attributes,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *DeleteLocalVolumeRequest) Reset() {
	*x = DeleteLocalVolumeRequest{}
	mi := &file_replication_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteLocalVolumeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteLocalVolumeRequest) ProtoMessage() {}

func (x *DeleteLocalVolumeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_replication_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteLocalVolumeRequest.ProtoReflect.Descriptor instead.
func (*DeleteLocalVolumeRequest) Descriptor() ([]byte, []int) {
	return file_replication_proto_rawDescGZIP(), []int{5}
}

func (x *DeleteLocalVolumeRequest) GetVolumeHandle() string {
	if x != nil {
		return x.VolumeHandle
	}
	return ""
}

func (x *DeleteLocalVolumeRequest) GetVolumeAttributes() map[string]string {
	if x != nil {
		return x.VolumeAttributes
	}
	return nil
}

type CreateStorageProtectionGroupRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Handle of the volume, whose storage protection group is being requested,
	VolumeHandle string `protobuf:"bytes,1,opt,name=volume_handle,json=volumeHandle,proto3" json:"volume_handle,omitempty"`
	// Optional information about the Volume
	// will be supplied if the driver returned this information
	// in the CSI CreateVolumeResponse
	Parameters    map[string]string `protobuf:"bytes,2,rep,name=parameters,proto3" json:"parameters,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateStorageProtectionGroupRequest) Reset() {
	*x = CreateStorageProtectionGroupRequest{}
	mi := &file_replication_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateStorageProtectionGroupRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateStorageProtectionGroupRequest) ProtoMessage() {}

func (x *CreateStorageProtectionGroupRequest) ProtoReflect() protoreflect.Message {
	mi := &file_replication_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateStorageProtectionGroupRequest.ProtoReflect.Descriptor instead.
func (*CreateStorageProtectionGroupRequest) Descriptor() ([]byte, []int) {
	return file_replication_proto_rawDescGZIP(), []int{6}
}

func (x *CreateStorageProtectionGroupRequest) GetVolumeHandle() string {
	if x != nil {
		return x.VolumeHandle
	}
	return ""
}

func (x *CreateStorageProtectionGroupRequest) GetParameters() map[string]string {
	if x != nil {
		return x.Parameters
	}
	return nil
}

type CreateStorageProtectionGroupResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Identifier for the local storage protection group
	// This should be unique for one CSI driver
	LocalProtectionGroupId string `protobuf:"bytes,1,opt,name=local_protection_group_id,json=localProtectionGroupId,proto3" json:"local_protection_group_id,omitempty"`
	// Identifier for the remote storage protection group
	// This should be unique for one CSI driver
	RemoteProtectionGroupId string `protobuf:"bytes,2,opt,name=remote_protection_group_id,json=remoteProtectionGroupId,proto3" json:"remote_protection_group_id,omitempty"`
	// Attributes for the local storage protection group
	LocalProtectionGroupAttributes map[string]string `protobuf:"bytes,3,rep,name=local_protection_group_attributes,json=localProtectionGroupAttributes,proto3" json:"local_protection_group_attributes,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	// Attributes for the remote storage protection group
	RemoteProtectionGroupAttributes map[string]string `protobuf:"bytes,4,rep,name=remote_protection_group_attributes,json=remoteProtectionGroupAttributes,proto3" json:"remote_protection_group_attributes,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	// status of the protection group
	Status        *StorageProtectionGroupStatus `protobuf:"bytes,5,opt,name=status,proto3" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateStorageProtectionGroupResponse) Reset() {
	*x = CreateStorageProtectionGroupResponse{}
	mi := &file_replication_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateStorageProtectionGroupResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateStorageProtectionGroupResponse) ProtoMessage() {}

func (x *CreateStorageProtectionGroupResponse) ProtoReflect() protoreflect.Message {
	mi := &file_replication_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateStorageProtectionGroupResponse.ProtoReflect.Descriptor instead.
func (*CreateStorageProtectionGroupResponse) Descriptor() ([]byte, []int) {
	return file_replication_proto_rawDescGZIP(), []int{7}
}

func (x *CreateStorageProtectionGroupResponse) GetLocalProtectionGroupId() string {
	if x != nil {
		return x.LocalProtectionGroupId
	}
	return ""
}

func (x *CreateStorageProtectionGroupResponse) GetRemoteProtectionGroupId() string {
	if x != nil {
		return x.RemoteProtectionGroupId
	}
	return ""
}

func (x *CreateStorageProtectionGroupResponse) GetLocalProtectionGroupAttributes() map[string]string {
	if x != nil {
		return x.LocalProtectionGroupAttributes
	}
	return nil
}

func (x *CreateStorageProtectionGroupResponse) GetRemoteProtectionGroupAttributes() map[string]string {
	if x != nil {
		return x.RemoteProtectionGroupAttributes
	}
	return nil
}

func (x *CreateStorageProtectionGroupResponse) GetStatus() *StorageProtectionGroupStatus {
	if x != nil {
		return x.Status
	}
	return nil
}

// Information about the remote replica of a local volume
type CreateRemoteVolumeResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Remote Volume
	RemoteVolume  *Volume `protobuf:"bytes,1,opt,name=remote_volume,json=remoteVolume,proto3" json:"remote_volume,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateRemoteVolumeResponse) Reset() {
	*x = CreateRemoteVolumeResponse{}
	mi := &file_replication_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateRemoteVolumeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateRemoteVolumeResponse) ProtoMessage() {}

func (x *CreateRemoteVolumeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_replication_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateRemoteVolumeResponse.ProtoReflect.Descriptor instead.
func (*CreateRemoteVolumeResponse) Descriptor() ([]byte, []int) {
	return file_replication_proto_rawDescGZIP(), []int{8}
}

func (x *CreateRemoteVolumeResponse) GetRemoteVolume() *Volume {
	if x != nil {
		return x.RemoteVolume
	}
	return nil
}

type DeleteLocalVolumeResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteLocalVolumeResponse) Reset() {
	*x = DeleteLocalVolumeResponse{}
	mi := &file_replication_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteLocalVolumeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteLocalVolumeResponse) ProtoMessage() {}

func (x *DeleteLocalVolumeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_replication_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteLocalVolumeResponse.ProtoReflect.Descriptor instead.
func (*DeleteLocalVolumeResponse) Descriptor() ([]byte, []int) {
	return file_replication_proto_rawDescGZIP(), []int{9}
}

// Information about a specific volume
type Volume struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Size of the volume in bytes
	CapacityBytes int64 `protobuf:"varint,1,opt,name=capacity_bytes,json=capacityBytes,proto3" json:"capacity_bytes,omitempty"`
	// Volume ID - should be the same as one
	// returned in the CSI CreateVolumeResponse
	VolumeId string `protobuf:"bytes,2,opt,name=volume_id,json=volumeId,proto3" json:"volume_id,omitempty"`
	// Optional context information about the volume
	// which can be passed down to the driver in future calls
	VolumeContext map[string]string `protobuf:"bytes,3,rep,name=volume_context,json=volumeContext,proto3" json:"volume_context,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Volume) Reset() {
	*x = Volume{}
	mi := &file_replication_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Volume) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Volume) ProtoMessage() {}

func (x *Volume) ProtoReflect() protoreflect.Message {
	mi := &file_replication_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Volume.ProtoReflect.Descriptor instead.
func (*Volume) Descriptor() ([]byte, []int) {
	return file_replication_proto_rawDescGZIP(), []int{10}
}

func (x *Volume) GetCapacityBytes() int64 {
	if x != nil {
		return x.CapacityBytes
	}
	return 0
}

func (x *Volume) GetVolumeId() string {
	if x != nil {
		return x.VolumeId
	}
	return ""
}

func (x *Volume) GetVolumeContext() map[string]string {
	if x != nil {
		return x.VolumeContext
	}
	return nil
}

type DeleteStorageProtectionGroupRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Unique identifier, representing the storage protection group
	ProtectionGroupId string `protobuf:"bytes,1,opt,name=protection_group_id,json=protectionGroupId,proto3" json:"protection_group_id,omitempty"`
	// Attributes of the storage protection group (optional)
	ProtectionGroupAttributes map[string]string `protobuf:"bytes,2,rep,name=protection_group_attributes,json=protectionGroupAttributes,proto3" json:"protection_group_attributes,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields             protoimpl.UnknownFields
	sizeCache                 protoimpl.SizeCache
}

func (x *DeleteStorageProtectionGroupRequest) Reset() {
	*x = DeleteStorageProtectionGroupRequest{}
	mi := &file_replication_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteStorageProtectionGroupRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteStorageProtectionGroupRequest) ProtoMessage() {}

func (x *DeleteStorageProtectionGroupRequest) ProtoReflect() protoreflect.Message {
	mi := &file_replication_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteStorageProtectionGroupRequest.ProtoReflect.Descriptor instead.
func (*DeleteStorageProtectionGroupRequest) Descriptor() ([]byte, []int) {
	return file_replication_proto_rawDescGZIP(), []int{11}
}

func (x *DeleteStorageProtectionGroupRequest) GetProtectionGroupId() string {
	if x != nil {
		return x.ProtectionGroupId
	}
	return ""
}

func (x *DeleteStorageProtectionGroupRequest) GetProtectionGroupAttributes() map[string]string {
	if x != nil {
		return x.ProtectionGroupAttributes
	}
	return nil
}

type DeleteStorageProtectionGroupResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteStorageProtectionGroupResponse) Reset() {
	*x = DeleteStorageProtectionGroupResponse{}
	mi := &file_replication_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteStorageProtectionGroupResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteStorageProtectionGroupResponse) ProtoMessage() {}

func (x *DeleteStorageProtectionGroupResponse) ProtoReflect() protoreflect.Message {
	mi := &file_replication_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteStorageProtectionGroupResponse.ProtoReflect.Descriptor instead.
func (*DeleteStorageProtectionGroupResponse) Descriptor() ([]byte, []int) {
	return file_replication_proto_rawDescGZIP(), []int{12}
}

type Action struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ActionTypes   ActionTypes            `protobuf:"varint,1,opt,name=action_types,json=actionTypes,proto3,enum=replication.v1.ActionTypes" json:"action_types,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Action) Reset() {
	*x = Action{}
	mi := &file_replication_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Action) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Action) ProtoMessage() {}

func (x *Action) ProtoReflect() protoreflect.Message {
	mi := &file_replication_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Action.ProtoReflect.Descriptor instead.
func (*Action) Descriptor() ([]byte, []int) {
	return file_replication_proto_rawDescGZIP(), []int{13}
}

func (x *Action) GetActionTypes() ActionTypes {
	if x != nil {
		return x.ActionTypes
	}
	return ActionTypes_UNKNOWN_ACTION
}

type ExecuteActionRequest struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	ActionId          string                 `protobuf:"bytes,1,opt,name=action_id,json=actionId,proto3" json:"action_id,omitempty"`
	ProtectionGroupId string                 `protobuf:"bytes,2,opt,name=protection_group_id,json=protectionGroupId,proto3" json:"protection_group_id,omitempty"`
	// Types that are valid to be assigned to ActionTypes:
	//
	//	*ExecuteActionRequest_Action
	ActionTypes                     isExecuteActionRequest_ActionTypes `protobuf_oneof:"action_types"`
	ProtectionGroupAttributes       map[string]string                  `protobuf:"bytes,4,rep,name=protection_group_attributes,json=protectionGroupAttributes,proto3" json:"protection_group_attributes,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	RemoteProtectionGroupId         string                             `protobuf:"bytes,5,opt,name=remote_protection_group_id,json=remoteProtectionGroupId,proto3" json:"remote_protection_group_id,omitempty"`
	RemoteProtectionGroupAttributes map[string]string                  `protobuf:"bytes,6,rep,name=remote_protection_group_attributes,json=remoteProtectionGroupAttributes,proto3" json:"remote_protection_group_attributes,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields                   protoimpl.UnknownFields
	sizeCache                       protoimpl.SizeCache
}

func (x *ExecuteActionRequest) Reset() {
	*x = ExecuteActionRequest{}
	mi := &file_replication_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExecuteActionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExecuteActionRequest) ProtoMessage() {}

func (x *ExecuteActionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_replication_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExecuteActionRequest.ProtoReflect.Descriptor instead.
func (*ExecuteActionRequest) Descriptor() ([]byte, []int) {
	return file_replication_proto_rawDescGZIP(), []int{14}
}

func (x *ExecuteActionRequest) GetActionId() string {
	if x != nil {
		return x.ActionId
	}
	return ""
}

func (x *ExecuteActionRequest) GetProtectionGroupId() string {
	if x != nil {
		return x.ProtectionGroupId
	}
	return ""
}

func (x *ExecuteActionRequest) GetActionTypes() isExecuteActionRequest_ActionTypes {
	if x != nil {
		return x.ActionTypes
	}
	return nil
}

func (x *ExecuteActionRequest) GetAction() *Action {
	if x != nil {
		if x, ok := x.ActionTypes.(*ExecuteActionRequest_Action); ok {
			return x.Action
		}
	}
	return nil
}

func (x *ExecuteActionRequest) GetProtectionGroupAttributes() map[string]string {
	if x != nil {
		return x.ProtectionGroupAttributes
	}
	return nil
}

func (x *ExecuteActionRequest) GetRemoteProtectionGroupId() string {
	if x != nil {
		return x.RemoteProtectionGroupId
	}
	return ""
}

func (x *ExecuteActionRequest) GetRemoteProtectionGroupAttributes() map[string]string {
	if x != nil {
		return x.RemoteProtectionGroupAttributes
	}
	return nil
}

type isExecuteActionRequest_ActionTypes interface {
	isExecuteActionRequest_ActionTypes()
}

type ExecuteActionRequest_Action struct {
	Action *Action `protobuf:"bytes,3,opt,name=action,proto3,oneof"`
}

func (*ExecuteActionRequest_Action) isExecuteActionRequest_ActionTypes() {}

type ExecuteActionResponse struct {
	state   protoimpl.MessageState `protogen:"open.v1"`
	Success bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	// Types that are valid to be assigned to ActionTypes:
	//
	//	*ExecuteActionResponse_Action
	ActionTypes isExecuteActionResponse_ActionTypes `protobuf_oneof:"action_types"`
	// status of the protection group
	Status           *StorageProtectionGroupStatus `protobuf:"bytes,3,opt,name=status,proto3" json:"status,omitempty"`
	ActionAttributes map[string]string             `protobuf:"bytes,4,rep,name=action_attributes,json=actionAttributes,proto3" json:"action_attributes,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *ExecuteActionResponse) Reset() {
	*x = ExecuteActionResponse{}
	mi := &file_replication_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExecuteActionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExecuteActionResponse) ProtoMessage() {}

func (x *ExecuteActionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_replication_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExecuteActionResponse.ProtoReflect.Descriptor instead.
func (*ExecuteActionResponse) Descriptor() ([]byte, []int) {
	return file_replication_proto_rawDescGZIP(), []int{15}
}

func (x *ExecuteActionResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *ExecuteActionResponse) GetActionTypes() isExecuteActionResponse_ActionTypes {
	if x != nil {
		return x.ActionTypes
	}
	return nil
}

func (x *ExecuteActionResponse) GetAction() *Action {
	if x != nil {
		if x, ok := x.ActionTypes.(*ExecuteActionResponse_Action); ok {
			return x.Action
		}
	}
	return nil
}

func (x *ExecuteActionResponse) GetStatus() *StorageProtectionGroupStatus {
	if x != nil {
		return x.Status
	}
	return nil
}

func (x *ExecuteActionResponse) GetActionAttributes() map[string]string {
	if x != nil {
		return x.ActionAttributes
	}
	return nil
}

type isExecuteActionResponse_ActionTypes interface {
	isExecuteActionResponse_ActionTypes()
}

type ExecuteActionResponse_Action struct {
	Action *Action `protobuf:"bytes,2,opt,name=action,proto3,oneof"`
}

func (*ExecuteActionResponse_Action) isExecuteActionResponse_ActionTypes() {}

type GetStorageProtectionGroupStatusRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Protection group to be monitored
	ProtectionGroupId         string            `protobuf:"bytes,1,opt,name=protection_group_id,json=protectionGroupId,proto3" json:"protection_group_id,omitempty"`
	ProtectionGroupAttributes map[string]string `protobuf:"bytes,2,rep,name=protection_group_attributes,json=protectionGroupAttributes,proto3" json:"protection_group_attributes,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields             protoimpl.UnknownFields
	sizeCache                 protoimpl.SizeCache
}

func (x *GetStorageProtectionGroupStatusRequest) Reset() {
	*x = GetStorageProtectionGroupStatusRequest{}
	mi := &file_replication_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetStorageProtectionGroupStatusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetStorageProtectionGroupStatusRequest) ProtoMessage() {}

func (x *GetStorageProtectionGroupStatusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_replication_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetStorageProtectionGroupStatusRequest.ProtoReflect.Descriptor instead.
func (*GetStorageProtectionGroupStatusRequest) Descriptor() ([]byte, []int) {
	return file_replication_proto_rawDescGZIP(), []int{16}
}

func (x *GetStorageProtectionGroupStatusRequest) GetProtectionGroupId() string {
	if x != nil {
		return x.ProtectionGroupId
	}
	return ""
}

func (x *GetStorageProtectionGroupStatusRequest) GetProtectionGroupAttributes() map[string]string {
	if x != nil {
		return x.ProtectionGroupAttributes
	}
	return nil
}

type StorageProtectionGroupStatus struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The state of the protection group
	State         StorageProtectionGroupStatus_State `protobuf:"varint,1,opt,name=state,proto3,enum=replication.v1.StorageProtectionGroupStatus_State" json:"state,omitempty"`
	IsSource      bool                               `protobuf:"varint,2,opt,name=isSource,proto3" json:"isSource,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StorageProtectionGroupStatus) Reset() {
	*x = StorageProtectionGroupStatus{}
	mi := &file_replication_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StorageProtectionGroupStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StorageProtectionGroupStatus) ProtoMessage() {}

func (x *StorageProtectionGroupStatus) ProtoReflect() protoreflect.Message {
	mi := &file_replication_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StorageProtectionGroupStatus.ProtoReflect.Descriptor instead.
func (*StorageProtectionGroupStatus) Descriptor() ([]byte, []int) {
	return file_replication_proto_rawDescGZIP(), []int{17}
}

func (x *StorageProtectionGroupStatus) GetState() StorageProtectionGroupStatus_State {
	if x != nil {
		return x.State
	}
	return StorageProtectionGroupStatus_SYNCHRONIZED
}

func (x *StorageProtectionGroupStatus) GetIsSource() bool {
	if x != nil {
		return x.IsSource
	}
	return false
}

type GetStorageProtectionGroupStatusResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Returns status of the protection group
	Status        *StorageProtectionGroupStatus `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetStorageProtectionGroupStatusResponse) Reset() {
	*x = GetStorageProtectionGroupStatusResponse{}
	mi := &file_replication_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetStorageProtectionGroupStatusResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetStorageProtectionGroupStatusResponse) ProtoMessage() {}

func (x *GetStorageProtectionGroupStatusResponse) ProtoReflect() protoreflect.Message {
	mi := &file_replication_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetStorageProtectionGroupStatusResponse.ProtoReflect.Descriptor instead.
func (*GetStorageProtectionGroupStatusResponse) Descriptor() ([]byte, []int) {
	return file_replication_proto_rawDescGZIP(), []int{18}
}

func (x *GetStorageProtectionGroupStatusResponse) GetStatus() *StorageProtectionGroupStatus {
	if x != nil {
		return x.Status
	}
	return nil
}

type ReplicationCapability_RPC struct {
	state         protoimpl.MessageState         `protogen:"open.v1"`
	Type          ReplicationCapability_RPC_Type `protobuf:"varint,1,opt,name=type,proto3,enum=replication.v1.ReplicationCapability_RPC_Type" json:"type,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ReplicationCapability_RPC) Reset() {
	*x = ReplicationCapability_RPC{}
	mi := &file_replication_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReplicationCapability_RPC) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReplicationCapability_RPC) ProtoMessage() {}

func (x *ReplicationCapability_RPC) ProtoReflect() protoreflect.Message {
	mi := &file_replication_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReplicationCapability_RPC.ProtoReflect.Descriptor instead.
func (*ReplicationCapability_RPC) Descriptor() ([]byte, []int) {
	return file_replication_proto_rawDescGZIP(), []int{2, 0}
}

func (x *ReplicationCapability_RPC) GetType() ReplicationCapability_RPC_Type {
	if x != nil {
		return x.Type
	}
	return ReplicationCapability_RPC_CREATE_REMOTE_VOLUME
}

var File_replication_proto protoreflect.FileDescriptor

const file_replication_proto_rawDesc = "" +
	"\n" +
	"\x11replication.proto\x12\x0ereplication.v1\x1a\fcommon.proto\"!\n" +
	"\x1fGetReplicationCapabilityRequest\"\xa9\x01\n" +
	" GetReplicationCapabilityResponse\x12I\n" +
	"\fcapabilities\x18\x01 \x03(\v2%.replication.v1.ReplicationCapabilityR\fcapabilities\x12:\n" +
	"\aactions\x18\x02 \x03(\v2 .replication.v1.SupportedActionsR\aactions\"\xc7\x02\n" +
	"\x15ReplicationCapability\x12=\n" +
	"\x03rpc\x18\x01 \x01(\v2).replication.v1.ReplicationCapability.RPCH\x00R\x03rpc\x1a\xe6\x01\n" +
	"\x03RPC\x12B\n" +
	"\x04type\x18\x01 \x01(\x0e2..replication.v1.ReplicationCapability.RPC.TypeR\x04type\"\x9a\x01\n" +
	"\x04Type\x12\x18\n" +
	"\x14CREATE_REMOTE_VOLUME\x10\x00\x12\x1b\n" +
	"\x17CREATE_PROTECTION_GROUP\x10\x01\x12\x1b\n" +
	"\x17DELETE_PROTECTION_GROUP\x10\x02\x12\x1c\n" +
	"\x18MONITOR_PROTECTION_GROUP\x10\x03\x12 \n" +
	"\x1cREPLICATION_ACTION_EXECUTION\x10\x04B\x06\n" +
	"\x04type\"P\n" +
	"\x10SupportedActions\x121\n" +
	"\x04type\x18\x01 \x01(\x0e2\x1b.replication.v1.ActionTypesH\x00R\x04typeB\t\n" +
	"\aActions\"\xda\x01\n" +
	"\x19CreateRemoteVolumeRequest\x12#\n" +
	"\rvolume_handle\x18\x01 \x01(\tR\fvolumeHandle\x12Y\n" +
	"\n" +
	"parameters\x18\x02 \x03(\v29.replication.v1.CreateRemoteVolumeRequest.ParametersEntryR\n" +
	"parameters\x1a=\n" +
	"\x0fParametersEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xf1\x01\n" +
	"\x18DeleteLocalVolumeRequest\x12#\n" +
	"\rvolume_handle\x18\x01 \x01(\tR\fvolumeHandle\x12k\n" +
	"\x11volume_attributes\x18\x02 \x03(\v2>.replication.v1.DeleteLocalVolumeRequest.VolumeAttributesEntryR\x10volumeAttributes\x1aC\n" +
	"\x15VolumeAttributesEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xee\x01\n" +
	"#CreateStorageProtectionGroupRequest\x12#\n" +
	"\rvolume_handle\x18\x01 \x01(\tR\fvolumeHandle\x12c\n" +
	"\n" +
	"parameters\x18\x02 \x03(\v2C.replication.v1.CreateStorageProtectionGroupRequest.ParametersEntryR\n" +
	"parameters\x1a=\n" +
	"\x0fParametersEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xda\x05\n" +
	"$CreateStorageProtectionGroupResponse\x129\n" +
	"\x19local_protection_group_id\x18\x01 \x01(\tR\x16localProtectionGroupId\x12;\n" +
	"\x1aremote_protection_group_id\x18\x02 \x01(\tR\x17remoteProtectionGroupId\x12\xa3\x01\n" +
	"!local_protection_group_attributes\x18\x03 \x03(\v2X.replication.v1.CreateStorageProtectionGroupResponse.LocalProtectionGroupAttributesEntryR\x1elocalProtectionGroupAttributes\x12\xa6\x01\n" +
	"\"remote_protection_group_attributes\x18\x04 \x03(\v2Y.replication.v1.CreateStorageProtectionGroupResponse.RemoteProtectionGroupAttributesEntryR\x1fremoteProtectionGroupAttributes\x12D\n" +
	"\x06status\x18\x05 \x01(\v2,.replication.v1.StorageProtectionGroupStatusR\x06status\x1aQ\n" +
	"#LocalProtectionGroupAttributesEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\x1aR\n" +
	"$RemoteProtectionGroupAttributesEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"Y\n" +
	"\x1aCreateRemoteVolumeResponse\x12;\n" +
	"\rremote_volume\x18\x01 \x01(\v2\x16.replication.v1.VolumeR\fremoteVolume\"\x1b\n" +
	"\x19DeleteLocalVolumeResponse\"\xe0\x01\n" +
	"\x06Volume\x12%\n" +
	"\x0ecapacity_bytes\x18\x01 \x01(\x03R\rcapacityBytes\x12\x1b\n" +
	"\tvolume_id\x18\x02 \x01(\tR\bvolumeId\x12P\n" +
	"\x0evolume_context\x18\x03 \x03(\v2).replication.v1.Volume.VolumeContextEntryR\rvolumeContext\x1a@\n" +
	"\x12VolumeContextEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xb8\x02\n" +
	"#DeleteStorageProtectionGroupRequest\x12.\n" +
	"\x13protection_group_id\x18\x01 \x01(\tR\x11protectionGroupId\x12\x92\x01\n" +
	"\x1bprotection_group_attributes\x18\x02 \x03(\v2R.replication.v1.DeleteStorageProtectionGroupRequest.ProtectionGroupAttributesEntryR\x19protectionGroupAttributes\x1aL\n" +
	"\x1eProtectionGroupAttributesEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"&\n" +
	"$DeleteStorageProtectionGroupResponse\"H\n" +
	"\x06Action\x12>\n" +
	"\faction_types\x18\x01 \x01(\x0e2\x1b.replication.v1.ActionTypesR\vactionTypes\"\xa3\x05\n" +
	"\x14ExecuteActionRequest\x12\x1b\n" +
	"\taction_id\x18\x01 \x01(\tR\bactionId\x12.\n" +
	"\x13protection_group_id\x18\x02 \x01(\tR\x11protectionGroupId\x120\n" +
	"\x06action\x18\x03 \x01(\v2\x16.replication.v1.ActionH\x00R\x06action\x12\x83\x01\n" +
	"\x1bprotection_group_attributes\x18\x04 \x03(\v2C.replication.v1.ExecuteActionRequest.ProtectionGroupAttributesEntryR\x19protectionGroupAttributes\x12;\n" +
	"\x1aremote_protection_group_id\x18\x05 \x01(\tR\x17remoteProtectionGroupId\x12\x96\x01\n" +
	"\"remote_protection_group_attributes\x18\x06 \x03(\v2I.replication.v1.ExecuteActionRequest.RemoteProtectionGroupAttributesEntryR\x1fremoteProtectionGroupAttributes\x1aL\n" +
	"\x1eProtectionGroupAttributesEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\x1aR\n" +
	"$RemoteProtectionGroupAttributesEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01B\x0e\n" +
	"\faction_types\"\xe8\x02\n" +
	"\x15ExecuteActionResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x120\n" +
	"\x06action\x18\x02 \x01(\v2\x16.replication.v1.ActionH\x00R\x06action\x12D\n" +
	"\x06status\x18\x03 \x01(\v2,.replication.v1.StorageProtectionGroupStatusR\x06status\x12h\n" +
	"\x11action_attributes\x18\x04 \x03(\v2;.replication.v1.ExecuteActionResponse.ActionAttributesEntryR\x10actionAttributes\x1aC\n" +
	"\x15ActionAttributesEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01B\x0e\n" +
	"\faction_types\"\xbe\x02\n" +
	"&GetStorageProtectionGroupStatusRequest\x12.\n" +
	"\x13protection_group_id\x18\x01 \x01(\tR\x11protectionGroupId\x12\x95\x01\n" +
	"\x1bprotection_group_attributes\x18\x02 \x03(\v2U.replication.v1.GetStorageProtectionGroupStatusRequest.ProtectionGroupAttributesEntryR\x19protectionGroupAttributes\x1aL\n" +
	"\x1eProtectionGroupAttributesEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xf9\x01\n" +
	"\x1cStorageProtectionGroupStatus\x12H\n" +
	"\x05state\x18\x01 \x01(\x0e22.replication.v1.StorageProtectionGroupStatus.StateR\x05state\x12\x1a\n" +
	"\bisSource\x18\x02 \x01(\bR\bisSource\"s\n" +
	"\x05State\x12\x10\n" +
	"\fSYNCHRONIZED\x10\x00\x12\x14\n" +
	"\x10SYNC_IN_PROGRESS\x10\x01\x12\r\n" +
	"\tSUSPENDED\x10\x02\x12\x0e\n" +
	"\n" +
	"FAILEDOVER\x10\x03\x12\v\n" +
	"\aINVALID\x10\x04\x12\v\n" +
	"\aUNKNOWN\x10\x05\x12\t\n" +
	"\x05EMPTY\x10\x06\"o\n" +
	"'GetStorageProtectionGroupStatusResponse\x12D\n" +
	"\x06status\x18\x01 \x01(\v2,.replication.v1.StorageProtectionGroupStatusR\x06status*\x9c\x04\n" +
	"\vActionTypes\x12\x12\n" +
	"\x0eUNKNOWN_ACTION\x10\x00\x12\x12\n" +
	"\x0eFAILOVER_LOCAL\x10\x01\x12\x13\n" +
	"\x0fFAILOVER_REMOTE\x10\x02\x12\x1c\n" +
	"\x18UNPLANNED_FAILOVER_LOCAL\x10\x03\x12\x1d\n" +
	"\x19UNPLANNED_FAILOVER_REMOTE\x10\x04\x12\x13\n" +
	"\x0fREPROTECT_LOCAL\x10\x05\x12\x14\n" +
	"\x10REPROTECT_REMOTE\x10\x06\x12\x1f\n" +
	"\x1bFAILOVER_WITHOUT_SWAP_LOCAL\x10\a\x12 \n" +
	"\x1cFAILOVER_WITHOUT_SWAP_REMOTE\x10\b\x12\x12\n" +
	"\x0eFAILBACK_LOCAL\x10\t\x12\x13\n" +
	"\x0fFAILBACK_REMOTE\x10\n" +
	"\x12)\n" +
	"%ACTION_FAILBACK_DISCARD_CHANGES_LOCAL\x10\v\x12*\n" +
	"&ACTION_FAILBACK_DISCARD_CHANGES_REMOTE\x10\f\x12\x0e\n" +
	"\n" +
	"SWAP_LOCAL\x10\r\x12\x0f\n" +
	"\vSWAP_REMOTE\x10\x0e\x12\v\n" +
	"\aSUSPEND\x10\x0f\x12\n" +
	"\n" +
	"\x06RESUME\x10\x10\x12\r\n" +
	"\tESTABLISH\x10\x11\x12\b\n" +
	"\x04SYNC\x10\x12\x12\x11\n" +
	"\rTEST_FAILOVER\x10\x13\x12\x16\n" +
	"\x12TEST_FAILOVER_STOP\x10\x14\x12\x13\n" +
	"\x0fCREATE_SNAPSHOT\x10\x15\x12\x12\n" +
	"\x0eABORT_SNAPSHOT\x10\x162\xdb\a\n" +
	"\vReplication\x12Z\n" +
	"\x0fProbeController\x12!.common.v1.ProbeControllerRequest\x1a\".common.v1.ProbeControllerResponse\"\x00\x12\x81\x01\n" +
	"\x1aGetReplicationCapabilities\x12/.replication.v1.GetReplicationCapabilityRequest\x1a0.replication.v1.GetReplicationCapabilityResponse\"\x00\x12\x8b\x01\n" +
	"\x1cCreateStorageProtectionGroup\x123.replication.v1.CreateStorageProtectionGroupRequest\x1a4.replication.v1.CreateStorageProtectionGroupResponse\"\x00\x12m\n" +
	"\x12CreateRemoteVolume\x12).replication.v1.CreateRemoteVolumeRequest\x1a*.replication.v1.CreateRemoteVolumeResponse\"\x00\x12\x8b\x01\n" +
	"\x1cDeleteStorageProtectionGroup\x123.replication.v1.DeleteStorageProtectionGroupRequest\x1a4.replication.v1.DeleteStorageProtectionGroupResponse\"\x00\x12j\n" +
	"\x11DeleteLocalVolume\x12(.replication.v1.DeleteLocalVolumeRequest\x1a).replication.v1.DeleteLocalVolumeResponse\"\x00\x12^\n" +
	"\rExecuteAction\x12$.replication.v1.ExecuteActionRequest\x1a%.replication.v1.ExecuteActionResponse\"\x00\x12\x94\x01\n" +
	"\x1fGetStorageProtectionGroupStatus\x126.replication.v1.GetStorageProtectionGroupStatusRequest\x1a7.replication.v1.GetStorageProtectionGroupStatusResponse\"\x00B\x10Z\x0e./;replicationb\x06proto3"

var (
	file_replication_proto_rawDescOnce sync.Once
	file_replication_proto_rawDescData []byte
)

func file_replication_proto_rawDescGZIP() []byte {
	file_replication_proto_rawDescOnce.Do(func() {
		file_replication_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_replication_proto_rawDesc), len(file_replication_proto_rawDesc)))
	})
	return file_replication_proto_rawDescData
}

var file_replication_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_replication_proto_msgTypes = make([]protoimpl.MessageInfo, 31)
var file_replication_proto_goTypes = []any{
	(ActionTypes)(0),                                // 0: replication.v1.ActionTypes
	(ReplicationCapability_RPC_Type)(0),             // 1: replication.v1.ReplicationCapability.RPC.Type
	(StorageProtectionGroupStatus_State)(0),         // 2: replication.v1.StorageProtectionGroupStatus.State
	(*GetReplicationCapabilityRequest)(nil),         // 3: replication.v1.GetReplicationCapabilityRequest
	(*GetReplicationCapabilityResponse)(nil),        // 4: replication.v1.GetReplicationCapabilityResponse
	(*ReplicationCapability)(nil),                   // 5: replication.v1.ReplicationCapability
	(*SupportedActions)(nil),                        // 6: replication.v1.SupportedActions
	(*CreateRemoteVolumeRequest)(nil),               // 7: replication.v1.CreateRemoteVolumeRequest
	(*DeleteLocalVolumeRequest)(nil),                // 8: replication.v1.DeleteLocalVolumeRequest
	(*CreateStorageProtectionGroupRequest)(nil),     // 9: replication.v1.CreateStorageProtectionGroupRequest
	(*CreateStorageProtectionGroupResponse)(nil),    // 10: replication.v1.CreateStorageProtectionGroupResponse
	(*CreateRemoteVolumeResponse)(nil),              // 11: replication.v1.CreateRemoteVolumeResponse
	(*DeleteLocalVolumeResponse)(nil),               // 12: replication.v1.DeleteLocalVolumeResponse
	(*Volume)(nil),                                  // 13: replication.v1.Volume
	(*DeleteStorageProtectionGroupRequest)(nil),     // 14: replication.v1.DeleteStorageProtectionGroupRequest
	(*DeleteStorageProtectionGroupResponse)(nil),    // 15: replication.v1.DeleteStorageProtectionGroupResponse
	(*Action)(nil),                                  // 16: replication.v1.Action
	(*ExecuteActionRequest)(nil),                    // 17: replication.v1.ExecuteActionRequest
	(*ExecuteActionResponse)(nil),                   // 18: replication.v1.ExecuteActionResponse
	(*GetStorageProtectionGroupStatusRequest)(nil),  // 19: replication.v1.GetStorageProtectionGroupStatusRequest
	(*StorageProtectionGroupStatus)(nil),            // 20: replication.v1.StorageProtectionGroupStatus
	(*GetStorageProtectionGroupStatusResponse)(nil), // 21: replication.v1.GetStorageProtectionGroupStatusResponse
	(*ReplicationCapability_RPC)(nil),               // 22: replication.v1.ReplicationCapability.RPC
	nil,                                             // 23: replication.v1.CreateRemoteVolumeRequest.ParametersEntry
	nil,                                             // 24: replication.v1.DeleteLocalVolumeRequest.VolumeAttributesEntry
	nil,                                             // 25: replication.v1.CreateStorageProtectionGroupRequest.ParametersEntry
	nil,                                             // 26: replication.v1.CreateStorageProtectionGroupResponse.LocalProtectionGroupAttributesEntry
	nil,                                             // 27: replication.v1.CreateStorageProtectionGroupResponse.RemoteProtectionGroupAttributesEntry
	nil,                                             // 28: replication.v1.Volume.VolumeContextEntry
	nil,                                             // 29: replication.v1.DeleteStorageProtectionGroupRequest.ProtectionGroupAttributesEntry
	nil,                                             // 30: replication.v1.ExecuteActionRequest.ProtectionGroupAttributesEntry
	nil,                                             // 31: replication.v1.ExecuteActionRequest.RemoteProtectionGroupAttributesEntry
	nil,                                             // 32: replication.v1.ExecuteActionResponse.ActionAttributesEntry
	nil,                                             // 33: replication.v1.GetStorageProtectionGroupStatusRequest.ProtectionGroupAttributesEntry
	(*common.ProbeControllerRequest)(nil),           // 34: common.v1.ProbeControllerRequest
	(*common.ProbeControllerResponse)(nil),          // 35: common.v1.ProbeControllerResponse
}
var file_replication_proto_depIdxs = []int32{
	5,  // 0: replication.v1.GetReplicationCapabilityResponse.capabilities:type_name -> replication.v1.ReplicationCapability
	6,  // 1: replication.v1.GetReplicationCapabilityResponse.actions:type_name -> replication.v1.SupportedActions
	22, // 2: replication.v1.ReplicationCapability.rpc:type_name -> replication.v1.ReplicationCapability.RPC
	0,  // 3: replication.v1.SupportedActions.type:type_name -> replication.v1.ActionTypes
	23, // 4: replication.v1.CreateRemoteVolumeRequest.parameters:type_name -> replication.v1.CreateRemoteVolumeRequest.ParametersEntry
	24, // 5: replication.v1.DeleteLocalVolumeRequest.volume_attributes:type_name -> replication.v1.DeleteLocalVolumeRequest.VolumeAttributesEntry
	25, // 6: replication.v1.CreateStorageProtectionGroupRequest.parameters:type_name -> replication.v1.CreateStorageProtectionGroupRequest.ParametersEntry
	26, // 7: replication.v1.CreateStorageProtectionGroupResponse.local_protection_group_attributes:type_name -> replication.v1.CreateStorageProtectionGroupResponse.LocalProtectionGroupAttributesEntry
	27, // 8: replication.v1.CreateStorageProtectionGroupResponse.remote_protection_group_attributes:type_name -> replication.v1.CreateStorageProtectionGroupResponse.RemoteProtectionGroupAttributesEntry
	20, // 9: replication.v1.CreateStorageProtectionGroupResponse.status:type_name -> replication.v1.StorageProtectionGroupStatus
	13, // 10: replication.v1.CreateRemoteVolumeResponse.remote_volume:type_name -> replication.v1.Volume
	28, // 11: replication.v1.Volume.volume_context:type_name -> replication.v1.Volume.VolumeContextEntry
	29, // 12: replication.v1.DeleteStorageProtectionGroupRequest.protection_group_attributes:type_name -> replication.v1.DeleteStorageProtectionGroupRequest.ProtectionGroupAttributesEntry
	0,  // 13: replication.v1.Action.action_types:type_name -> replication.v1.ActionTypes
	16, // 14: replication.v1.ExecuteActionRequest.action:type_name -> replication.v1.Action
	30, // 15: replication.v1.ExecuteActionRequest.protection_group_attributes:type_name -> replication.v1.ExecuteActionRequest.ProtectionGroupAttributesEntry
	31, // 16: replication.v1.ExecuteActionRequest.remote_protection_group_attributes:type_name -> replication.v1.ExecuteActionRequest.RemoteProtectionGroupAttributesEntry
	16, // 17: replication.v1.ExecuteActionResponse.action:type_name -> replication.v1.Action
	20, // 18: replication.v1.ExecuteActionResponse.status:type_name -> replication.v1.StorageProtectionGroupStatus
	32, // 19: replication.v1.ExecuteActionResponse.action_attributes:type_name -> replication.v1.ExecuteActionResponse.ActionAttributesEntry
	33, // 20: replication.v1.GetStorageProtectionGroupStatusRequest.protection_group_attributes:type_name -> replication.v1.GetStorageProtectionGroupStatusRequest.ProtectionGroupAttributesEntry
	2,  // 21: replication.v1.StorageProtectionGroupStatus.state:type_name -> replication.v1.StorageProtectionGroupStatus.State
	20, // 22: replication.v1.GetStorageProtectionGroupStatusResponse.status:type_name -> replication.v1.StorageProtectionGroupStatus
	1,  // 23: replication.v1.ReplicationCapability.RPC.type:type_name -> replication.v1.ReplicationCapability.RPC.Type
	34, // 24: replication.v1.Replication.ProbeController:input_type -> common.v1.ProbeControllerRequest
	3,  // 25: replication.v1.Replication.GetReplicationCapabilities:input_type -> replication.v1.GetReplicationCapabilityRequest
	9,  // 26: replication.v1.Replication.CreateStorageProtectionGroup:input_type -> replication.v1.CreateStorageProtectionGroupRequest
	7,  // 27: replication.v1.Replication.CreateRemoteVolume:input_type -> replication.v1.CreateRemoteVolumeRequest
	14, // 28: replication.v1.Replication.DeleteStorageProtectionGroup:input_type -> replication.v1.DeleteStorageProtectionGroupRequest
	8,  // 29: replication.v1.Replication.DeleteLocalVolume:input_type -> replication.v1.DeleteLocalVolumeRequest
	17, // 30: replication.v1.Replication.ExecuteAction:input_type -> replication.v1.ExecuteActionRequest
	19, // 31: replication.v1.Replication.GetStorageProtectionGroupStatus:input_type -> replication.v1.GetStorageProtectionGroupStatusRequest
	35, // 32: replication.v1.Replication.ProbeController:output_type -> common.v1.ProbeControllerResponse
	4,  // 33: replication.v1.Replication.GetReplicationCapabilities:output_type -> replication.v1.GetReplicationCapabilityResponse
	10, // 34: replication.v1.Replication.CreateStorageProtectionGroup:output_type -> replication.v1.CreateStorageProtectionGroupResponse
	11, // 35: replication.v1.Replication.CreateRemoteVolume:output_type -> replication.v1.CreateRemoteVolumeResponse
	15, // 36: replication.v1.Replication.DeleteStorageProtectionGroup:output_type -> replication.v1.DeleteStorageProtectionGroupResponse
	12, // 37: replication.v1.Replication.DeleteLocalVolume:output_type -> replication.v1.DeleteLocalVolumeResponse
	18, // 38: replication.v1.Replication.ExecuteAction:output_type -> replication.v1.ExecuteActionResponse
	21, // 39: replication.v1.Replication.GetStorageProtectionGroupStatus:output_type -> replication.v1.GetStorageProtectionGroupStatusResponse
	32, // [32:40] is the sub-list for method output_type
	24, // [24:32] is the sub-list for method input_type
	24, // [24:24] is the sub-list for extension type_name
	24, // [24:24] is the sub-list for extension extendee
	0,  // [0:24] is the sub-list for field type_name
}

func init() { file_replication_proto_init() }
func file_replication_proto_init() {
	if File_replication_proto != nil {
		return
	}
	file_replication_proto_msgTypes[2].OneofWrappers = []any{
		(*ReplicationCapability_Rpc)(nil),
	}
	file_replication_proto_msgTypes[3].OneofWrappers = []any{
		(*SupportedActions_Type)(nil),
	}
	file_replication_proto_msgTypes[14].OneofWrappers = []any{
		(*ExecuteActionRequest_Action)(nil),
	}
	file_replication_proto_msgTypes[15].OneofWrappers = []any{
		(*ExecuteActionResponse_Action)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_replication_proto_rawDesc), len(file_replication_proto_rawDesc)),
			NumEnums:      3,
			NumMessages:   31,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_replication_proto_goTypes,
		DependencyIndexes: file_replication_proto_depIdxs,
		EnumInfos:         file_replication_proto_enumTypes,
		MessageInfos:      file_replication_proto_msgTypes,
	}.Build()
	File_replication_proto = out.File
	file_replication_proto_goTypes = nil
	file_replication_proto_depIdxs = nil
}
